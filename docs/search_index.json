[["index.html", "United States Covid Project Chapter 1 Introduction", " United States Covid Project Ruize Yu, Jiazhen Li, Wenxin Zhang 2021-11-18 Chapter 1 Introduction "],["data-sources.html", "Chapter 2 Data sources", " Chapter 2 Data sources In this project, we have three data sources: "],["data-transformation.html", "Chapter 3 Data transformation", " Chapter 3 Data transformation "],["missing-values.html", "Chapter 4 Missing values 4.1 Dataframe after data cleaning 4.2 Missing value counts by column 4.3 Missing value counts by row 4.4 Heatmap", " Chapter 4 Missing values We will use US vaccination data as an example to show how we are going to show missing data pattern. 4.1 Dataframe after data cleaning ## # A tibble: 6 × 14 ## date location total_vaccinati… total_distribut… people_vaccinat… people_fully_va… total_vaccinati… people_fully_va… ## &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2020-12-20 United States 556208 NA NA NA 0.17 NA ## 2 2020-12-21 United States 614117 NA NA NA 0.18 NA ## 3 2020-12-22 United States NA NA NA NA NA NA ## 4 2020-12-23 United States 1008025 NA NA NA 0.3 NA ## 5 2020-12-24 United States NA NA NA NA NA NA ## 6 2020-12-25 United States NA NA NA NA NA NA ## # … with 6 more variables: people_vaccinated_per_hundred &lt;dbl&gt;, distributed_per_hundred &lt;dbl&gt;, daily_vaccinations_raw &lt;dbl&gt;, ## # daily_vaccinations &lt;dbl&gt;, daily_vaccinations_per_million &lt;dbl&gt;, share_doses_used &lt;dbl&gt; The original dataframe contain vaccination information of all states and some organizations of United States. We extracted whole country data and we can see that each row represents a day from 2020-12-20 to now. The information is updated everyday. There are lots of missing values in the table and we are going to use different methods to visualize it. 4.2 Missing value counts by column ## num_missing ## daily_vaccinations_raw 36 ## people_fully_vaccinated_per_hundred 35 ## people_fully_vaccinated 35 ## total_distributed 34 ## people_vaccinated 34 ## people_vaccinated_per_hundred 34 ## distributed_per_hundred 34 ## share_doses_used 34 ## total_vaccinations 21 ## total_vaccinations_per_hundred 21 ## daily_vaccinations 1 ## daily_vaccinations_per_million 1 ## date 0 ## location 0 This is the missing value counts by different features. According to this table, we can see that the feature “daily_vaccinations_raw” has the largest number of missing values. And for some features, they have similar number of missing values. Such as “people_fully_vaccinated_per_hundred” and “people_fully_vaccinated”, both of them have number of missing values equal to 35, also, according the the features’ names, it can be guessed that there is a correlation between this two value, which may be the number of missing value in “people_fully_vaccinated_per_hundred” is dependent on the feature “people_fully_vaccinated”, so they always have the missing value at the same time. 4.3 Missing value counts by row ## # A tibble: 9 × 2 ## date num_missing ## &lt;chr&gt; &lt;dbl&gt; ## 1 2020-12 109 ## 2 2021-01 125 ## 3 2021-02 11 ## 4 2021-05 10 ## 5 2021-06 1 ## 6 2021-07 11 ## 7 2021-09 21 ## 8 2021-10 21 ## 9 2021-11 11 Each row in the original dataframe represents a specific day. However, there are too many rows that have missing values. Therefore, we count missing values by month. December 2020 and January 2021 have the greatest number of missing values. This is reasonable as vaccination just started and it’s hard to get all data well-organized. 4.4 Heatmap In order to see the missing patterns we have for this dataframe, we can use heatmap. It can be observed that rows that have missing values all at once by using this heatmap. However, since there are 330 rows in the us_whole_vaccination dataframe, it is hard to summarize the missing value patterns without showing the whole graph. Moreover, as looking through the graph, several rows have the similar missing value patterns. So instead of showing the heatmap for each row, plot just show the different missing value patterns for the dataset is prefered. This missing value plot is a combination of all the information above. It consists of three plots. The main plot is the heatmap on the bottom left. It summarized different missing value patterns among all rows. The blue block in each column represents there are missing values in this column. According to the main plot, it shows that there are 7 different patterns for us_whole_vaccination dataset, which are represented by each row of the heatmap. The first row in the heatmap represents the complete cases, which means there is no missing value for rows in this pattern. By looking through this plot, there is a correlation between some features as mentioned in 4.2. For example, for features “people_fully_vaccinated_per_hundred” and “people_fully_vaccinated”, in each pattern, their missing value always occurred in the same time. Similar for features “total_distributed, people_vaccinated, people_vaccinated_per_hundred, distributed_per_hundred, and share_doses_used”, “daily_vaccinations and daily_vaccinations_per_million”, and “total_vaccinations and total_vaccinations_per_hundred”. It indicates that for some of these features, it maybe reasonable to only keep one feature from each group. For example, keep “people_fully_vaccinated” and remove “people_fully_vaccinated_per_hundred”. The barplot on the right is the row count plot. It tells us the number of rows that each pattern can apply. It shows that the complete cases pattern has the most largest number of rows. From this plot, it shows that pattern 2 has the largest number of rows with missing data. By checking with this pattern, it contains 10 features that are missing. A reasonable guess is that the most of data for this pattern comes from December 2020 and January 2021. Crossing checking with the heatmap for each row in 4.4, this guess is confirmed. The barplot on the top is a visualization of 4.2. It shows how many rows contain missing values of different features. As there are not many missing rows, we might remove missing patter 2, 4, 5, and 7 as over 50% of the features are missing. For pattern 3 and 6, we can use mean or median to fill the missing values. "],["results.html", "Chapter 5 Results", " Chapter 5 Results "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
